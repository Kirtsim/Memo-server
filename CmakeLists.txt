cmake_minimum_required (VERSION 3.0)

project (Memo-server LANGUAGES CXX)
add_compile_options(-std=c++17 -Wall -Wextra -Wsign-conversion)

# variable denoting where the "absolute" include paths start in
set(BASEPATH "${CMAKE_SOURCE_DIR}/src/")

set(SOURCES src/main.cpp
            src/logger/logger.cpp
            src/logger/easylogging++.cc
            src/memo/Reply.cpp
            src/memo/Server.cpp
            src/memo/Resources.cpp
            src/memo/Connection.cpp
            src/memo/Transaction.cpp
            src/memo/tools/Tools.cpp
            src/memo/tools/Receptor.cpp
            src/memo/tools/RequestParser.cpp
            src/memo/tools/RequestHandler.cpp
            src/memo/manager/ConnectionManager.cpp)
set(HEADERS src/logger/logger.hpp
            src/memo/Header.hpp
            src/memo/Request.hpp
            src/memo/Reply.hpp
            src/memo/Server.hpp
            src/memo/Resources.hpp
            src/memo/Connection.hpp
            src/memo/Transaction.hpp
            src/memo/tools/Tools.hpp
            src/memo/tools/Receptor.hpp
            src/memo/tools/RequestParser.hpp
            src/memo/tools/RequestHandler.hpp
            src/memo/manager/ConnectionManager.hpp)
set(PROTO_SVC_FILES
    ${CMAKE_CURRENT_SOURCE_DIR}/src/model/proto/TagSvc.proto
    ${CMAKE_CURRENT_SOURCE_DIR}/src/model/proto/MemoSvc.proto)
set(PROTO_FILES
    ${CMAKE_CURRENT_SOURCE_DIR}/src/model/proto/Tag.proto
    ${CMAKE_CURRENT_SOURCE_DIR}/src/model/proto/Memo.proto
    ${CMAKE_CURRENT_SOURCE_DIR}/src/model/proto/OperationStatus.proto)
list(APPEND PROTO_FILES ${PROTO_SVC_FILES})


set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

set(Boost_USE_STATIC_LIBS ON)
set(Boost_USE_MULTITHREADED ON)
set(Boost_USE_STATIC_RUNTIME OFF)
find_package(Boost 1.72.0 REQUIRED)

list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/cmake")
find_package(Protobuf REQUIRED)
find_package(GRPC REQUIRED)

set(PROTO_SRC_DIR ${CMAKE_CURRENT_SOURCE_DIR}/src/model)

file(MAKE_DIRECTORY ${PROTO_SRC_DIR})
include_directories(${PROTO_SRC_DIR})

protobuf_generate_cpp(PROTO_SRCS PROTO_HDRS ${PROTO_SRC_DIR} ${PROTO_FILES})
grpc_generate_cpp(GRPC_SRCS GRPC_HDRS ${PROTO_SRC_DIR} ${PROTO_SVC_FILES})

# Building server
add_executable(memo_server
    ${SOURCES}
    ${PROTO_SRCS}
    ${GRPC_SRCS})

target_link_libraries(memo_server
    gRPC::grpc++_reflection
    protobuf::libprotobuf)

add_definitions(-DBOOST_LOG_DYN_LINK)

# needed for "absolute" include paths
target_include_directories(memo_server PRIVATE ${BASEPATH})
target_include_directories(memo_server PRIVATE ${Boost_INCLUDE_DIR})
